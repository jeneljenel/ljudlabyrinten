[{"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/index.js":"1","/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/App.js":"2","/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/reportWebVitals.js":"3","/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/comp/Home.js":"4","/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/notfound.js":"5","/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/comp/Start.js":"6","/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/comp/AudioPlayer.js":"7"},{"size":944,"mtime":1613141801018,"results":"8","hashOfConfig":"9"},{"size":528,"mtime":1612261512028,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612261512029,"results":"11","hashOfConfig":"9"},{"size":330,"mtime":1613133819148,"results":"12","hashOfConfig":"9"},{"size":131,"mtime":1612517810021,"results":"13","hashOfConfig":"9"},{"size":1892,"mtime":1613141964770,"results":"14","hashOfConfig":"9"},{"size":3131,"mtime":1613141844532,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1pfjg85",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/index.js",[],"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/App.js",[],["33","34"],"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/reportWebVitals.js",[],["35","36"],"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/comp/Home.js",[],"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/notfound.js",[],"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/comp/Start.js",[],"/Users/tomielee/projekt/ljudlabyrinten/saga-app/src/comp/AudioPlayer.js",["37","38","39","40","41","42"],"import React, { Component } from 'react'\nimport ReactDOM, { findDOMNode } from 'react-dom'\nimport PropTypes from 'prop-types'\nimport { Media, Player, controls, utils } from 'react-media-player'\n// import PlayPause from './PlayPause'\n// import MuteUnmute from './MuteUnmute'\n\nconst {\n  PlayPause,\n  MuteUnmute,\n  CurrentTime,\n  Progress,\n  SeekBar,\n  Duration,\n  Volume,\n  Fullscreen,\n} = controls\nconst { formatTime } = utils\n\nclass Panner {\n  constructor({ source, audioContext, panningAmount = 0 }) {\n    this._source = source\n    this._audioContext = audioContext\n    this._initialPanningAmount = panningAmount\n  }\n\n  connect() {\n    this._splitter = this._audioContext.createChannelSplitter(2)\n    this._gainLeft = this._audioContext.createGain()\n    this._gainRight = this._audioContext.createGain()\n    this._merger = this._audioContext.createChannelMerger(2)\n    this._source.connect(\n      this._splitter,\n      0,\n      0\n    )\n    this._splitter.connect(\n      this._gainLeft,\n      0\n    )\n    this._splitter.connect(\n      this._gainRight,\n      1\n    )\n    this._gainLeft.connect(\n      this._merger,\n      0,\n      0\n    )\n    this._gainRight.connect(\n      this._merger,\n      0,\n      1\n    )\n    return this._merger\n  }\n\n  setPosition(amount) {\n    this._gainLeft.gain.value = amount <= 0 ? 1 : 1 - amount\n    this._gainRight.gain.value = amount >= 0 ? 1 : 1 + amount\n  }\n}\n\nconst tracks = ['first', 'second']\n\nclass AudioPlayer extends Component {\n  state = {\n    currentTrack: tracks[0],\n  }\n\n  _handlePannerChange = ({ target }) => {\n    const x = +target.value\n    const y = 0\n    const z = 1 - Math.abs(x)\n    this.panner.setPosition(x, y, z)\n  }\n\n  _connectSource = (source, audioContext) => {\n    this.panner = new Panner({ source, audioContext })\n    return this.panner.connect()\n  }\n\n  render() {\n    return (\n      <Media ref={c => (this.media = c)}>\n        <div>\n          {tracks.map(track => (\n            <button\n              key={track}\n              onClick={() => this.setState({ currentTrack: track })}\n            >\n              {track}\n            </button>\n          ))}\n          <Player\n            ref={c => (this._player = c)}\n            src={`/audio/${this.state.currentTrack}.mp3`}\n            connectSource={this._connectSource}\n            useAudioObject\n            // autoPlay\n          />\n          <div className=\"media-controls\">\n            <PlayPause className=\"media-control media-control--play-pause\" />\n            <CurrentTime className=\"media-control media-control--current-time\" />\n            <SeekBar className=\"media-control media-control--volume-range\" />\n            <Duration className=\"media-control media-control--duration\" />\n            <MuteUnmute className=\"media-control media-control--mute-unmute\" />\n            <Volume className=\"media-control media-control--volume\" />\n          </div>\n          <input\n            type=\"range\"\n            defaultValue=\"0\"\n            min=\"-1\"\n            max=\"1\"\n            step=\"any\"\n            onChange={this._handlePannerChange}\n          />\n        </div>\n      </Media>\n    )\n  }\n}\n\nexport default AudioPlayer",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":8,"nodeType":"51","messageId":"52","endLine":2,"endColumn":16},{"ruleId":"49","severity":1,"message":"53","line":2,"column":20,"nodeType":"51","messageId":"52","endLine":2,"endColumn":31},{"ruleId":"49","severity":1,"message":"54","line":3,"column":8,"nodeType":"51","messageId":"52","endLine":3,"endColumn":17},{"ruleId":"49","severity":1,"message":"55","line":12,"column":3,"nodeType":"51","messageId":"52","endLine":12,"endColumn":11},{"ruleId":"49","severity":1,"message":"56","line":16,"column":3,"nodeType":"51","messageId":"52","endLine":16,"endColumn":13},{"ruleId":"49","severity":1,"message":"57","line":18,"column":9,"nodeType":"51","messageId":"52","endLine":18,"endColumn":19},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],["58"],["59"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'findDOMNode' is defined but never used.","'PropTypes' is defined but never used.","'Progress' is assigned a value but never used.","'Fullscreen' is assigned a value but never used.","'formatTime' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]